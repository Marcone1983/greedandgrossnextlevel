name: 'Build apk'
description: 'Builds apk and returns path as output'
inputs:
  flavour: # id of input
    description: 'Pass the flavour you want to build artefacts for'
    required: false
    default: 'release'
outputs:
  apk-path:
    description: "Path to APK"
    value: ${{ steps.build-apk.outputs.apk-path }}
  apk-directory:
    description: "Directory containing APK"
    value: ${{ steps.build-apk.outputs.apk-directory }}
runs:
  using: "composite"
  steps:
    - name: Build APK
      id: build-apk
      shell: bash
      env:
        INPUT_FLAVOUR: ${{ inputs.flavour }}
      run: |
        cd GreedGross
        # Run with more verbose output to see JS errors
        java -cp gradle/wrapper/gradle-wrapper.jar org.gradle.wrapper.GradleWrapperMain assemble"$INPUT_FLAVOUR" --no-daemon -q || {
          echo "Build failed! Checking for JS bundle errors..."
          # Try to run the bundler manually to see the error
          cd ..
          npx react-native bundle --platform android --dev false --entry-file index.js --bundle-output /tmp/test.bundle --assets-dest /tmp
          exit 1
        }
        PATH="app/build/outputs/apk/$INPUT_FLAVOUR/app-$INPUT_FLAVOUR-unsigned.apk"
        DIR="app/build/outputs/apk/$INPUT_FLAVOUR"
        echo "apk-path=$(echo $PATH)" >> $GITHUB_OUTPUT
        echo "apk-directory=$(echo $DIR)" >> $GITHUB_OUTPUT
        
        # Check if APK was actually created
        if [ -f "$PATH" ]; then
          echo "✅ BUILD SUCCESS! APK created at: $PATH"
          ls -lh "$PATH"
        else
          echo "❌ BUILD FAILED! APK not found at: $PATH"
          exit 1
        fi