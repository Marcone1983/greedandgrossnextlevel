name: Build APK

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      
    - uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm install
        rm -rf node_modules/detox || true
        npm uninstall detox --save-dev || true
        
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Fix React Native version
      run: |
        sed -i 's/0\.79\.0/0.80.0/g' package.json
        sed -i 's/"@react-native\/babel-preset": "^0\.79\.0"/"@react-native\/babel-preset": "^0.80.0"/g' package.json
        sed -i 's/"@react-native\/gradle-plugin": "^0\.79\.0"/"@react-native\/gradle-plugin": "^0.80.0"/g' package.json
        sed -i 's/"@react-native\/metro-config": "^0\.79\.0"/"@react-native\/metro-config": "^0.80.0"/g' package.json
        npm install
        
    - name: Fix React Native Reanimated C++ compatibility
      run: |
        # Fix C++20 issues in reanimated after npm install
        find node_modules/react-native-reanimated -name "CMakeLists.txt" -exec sed -i 's/CMAKE_CXX_STANDARD 20/CMAKE_CXX_STANDARD 17/g' {} \; || true
        find node_modules/react-native-reanimated -name "CMakeLists.txt" -exec sed -i 's/cxx_std_20/cxx_std_17/g' {} \; || true
        find node_modules/react-native-reanimated -name "*.gradle" -exec sed -i 's/-std=c++20/-std=c++17/g' {} \; || true
        
    - name: Find Android directory
      run: |
        if [ -d "android" ]; then
          echo "ANDROID_DIR=android" >> $GITHUB_ENV
        elif [ -d "GreedGross" ]; then
          echo "ANDROID_DIR=GreedGross" >> $GITHUB_ENV
        else
          GRADLEW_PATH=$(find . -name "gradlew" -not -path "*/node_modules/*" | head -1)
          echo "ANDROID_DIR=$(dirname "$GRADLEW_PATH")" >> $GITHUB_ENV
        fi
        
    - name: Build all Android variants
      run: |
        cd "$ANDROID_DIR"
        chmod +x gradlew
        
        # Create react-native.config.js for custom directory
        cd ..
        cat > react-native.config.js << EOF
module.exports = {
  project: {
    ios: {},
    android: {
      sourceDir: './$ANDROID_DIR',
      manifestPath: 'app/src/main/AndroidManifest.xml',
      packageName: 'com.greedandgross.cannabisbreeding',
    },
  },
};
EOF
        cd "$ANDROID_DIR"
        
        touch lasspath
        
        # Create google-services.json if needed
        if [ ! -f "app/google-services.json" ]; then
          echo '{"project_info":{"project_number":"123456789","project_id":"test"},"client":[{"client_info":{"android_client_info":{"package_name":"com.greedandgross.cannabisbreeding"}},"api_key":[{"current_key":"test"}]}]}' > app/google-services.json
        fi
        
        # Add React Native repositories before removing plugin
        sed -i '/repositories {/a\        maven { url("$rootDir/../node_modules/react-native/android") }\
        maven { url("$rootDir/../node_modules/jsc-android/dist") }' build.gradle
        
        # Fix in allprojects too
        sed -i '/allprojects {/,/}/ { /repositories {/a\        maven { url("$rootDir/../node_modules/react-native/android") }\
        maven { url("$rootDir/../node_modules/jsc-android/dist") }
        }' build.gradle
        
        sed -i '/com\.facebook\.react:react-native-gradle-plugin/d' build.gradle
        sed -i '/classpath.*react-native-gradle-plugin/d' build.gradle
        
        # Add buildConfig configuration for all subprojects (fixes lottie-react-native)
        if ! grep -q "buildFeatures" build.gradle; then
          echo "" >> build.gradle
          echo "allprojects {" >> build.gradle
          echo "    afterEvaluate { project ->" >> build.gradle
          echo "        if (project.hasProperty('android')) {" >> build.gradle
          echo "            android {" >> build.gradle
          echo "                buildFeatures {" >> build.gradle
          echo "                    buildConfig true" >> build.gradle
          echo "                }" >> build.gradle
          echo "                // Fix namespace for React Native modules" >> build.gradle
          echo "                if (!project.android.hasProperty('namespace') || project.android.namespace == null) {" >> build.gradle
          echo "                    namespace project.group ?: 'com.reactnative.' + project.name.replace('-', '')" >> build.gradle
          echo "                }" >> build.gradle
          echo "            }" >> build.gradle
          echo "        }" >> build.gradle
          echo "    }" >> build.gradle
          echo "}" >> build.gradle
        fi
        
        if [ ! -d "app" ]; then
          echo "Creating app module structure..."
          mkdir -p app/src/main/java
          mkdir -p app/src/main/res
          
          echo 'apply plugin: "com.android.application"' > app/build.gradle
          echo '' >> app/build.gradle
          echo 'android {' >> app/build.gradle
          echo '    compileSdkVersion 34' >> app/build.gradle
          echo '    buildToolsVersion "34.0.0"' >> app/build.gradle
          echo '    ' >> app/build.gradle
          echo '    buildFeatures {' >> app/build.gradle
          echo '        buildConfig true' >> app/build.gradle
          echo '    }' >> app/build.gradle
          echo '    ' >> app/build.gradle
          echo '    defaultConfig {' >> app/build.gradle
          echo '        applicationId "com.greedgross"' >> app/build.gradle
          echo '        minSdkVersion 24' >> app/build.gradle
          echo '        targetSdkVersion 34' >> app/build.gradle
          echo '        versionCode 1' >> app/build.gradle
          echo '        versionName "1.0"' >> app/build.gradle
          echo '    }' >> app/build.gradle
          echo '    ' >> app/build.gradle
          echo '    buildTypes {' >> app/build.gradle
          echo '        debug {' >> app/build.gradle
          echo '            debuggable true' >> app/build.gradle
          echo '        }' >> app/build.gradle
          echo '        release {' >> app/build.gradle
          echo '            minifyEnabled false' >> app/build.gradle
          echo '        }' >> app/build.gradle
          echo '    }' >> app/build.gradle
          echo '}' >> app/build.gradle
          
          echo "include ':app'" >> settings.gradle
        else
          sed -i '/apply plugin: "com.facebook.react"/d' app/build.gradle
          if ! grep -q "compileSdkVersion" app/build.gradle; then
            sed -i '/android {/a\    compileSdkVersion 34' app/build.gradle
          fi
          if ! grep -q "buildConfig true" app/build.gradle; then
            sed -i '/android {/a\    buildFeatures {\n        buildConfig true\n    }' app/build.gradle
          fi
        fi
        
        echo "Available build tasks:"
        ./gradlew tasks | grep -i assemble
        
        # Fix Maven repositories for React Native packages
        echo "Fixing Maven repositories for React Native packages..."
        
        # Add proper repository configuration to settings.gradle
        cat >> settings.gradle << 'EOF'

// Add local React Native Maven repository
allprojects {
    repositories {
        google()
        mavenCentral()
        
        // Local React Native Maven repository
        maven {
            url("$rootDir/../node_modules/react-native/android")
        }
        
        // For other React Native dependencies
        maven { url "https://www.jitpack.io" }
    }
}
EOF
        
        # Fix autolinking before build
        echo "Fixing React Native autolinking..."
        mkdir -p app/build/generated/autolinking/src/main/java/com/facebook/react
        cat > app/build/generated/autolinking/src/main/java/com/facebook/react/PackageList.java << 'EOF'
package com.facebook.react;

import android.app.Application;
import android.content.Context;
import android.content.res.Resources;

import com.facebook.react.ReactPackage;
import com.facebook.react.shell.MainPackageConfig;
import com.facebook.react.shell.MainReactPackage;
import java.util.Arrays;
import java.util.ArrayList;

// Import native modules
import com.th3rdwave.safeareacontext.SafeAreaContextPackage;
import com.swmansion.gesturehandler.RNGestureHandlerPackage;
import com.swmansion.rnscreens.RNScreensPackage;
import com.swmansion.reanimated.ReanimatedPackage;
import cl.json.RNSharePackage;
import com.horcrux.svg.SvgPackage;
import com.oblador.vectoricons.VectorIconsPackage;
import com.reactnativecommunity.webview.RNCWebViewPackage;
import com.rnfs.RNFSPackage;
import com.mkuczera.RNReactNativeHapticFeedbackPackage;
import com.learnium.RNDeviceInfo.RNDeviceInfoPackage;
import com.BV.LinearGradient.LinearGradientPackage;
import com.reactnativecommunity.asyncstorage.AsyncStoragePackage;
import io.invertase.firebase.app.ReactNativeFirebaseAppPackage;
import io.invertase.firebase.auth.ReactNativeFirebaseAuthPackage;
import io.invertase.firebase.firestore.ReactNativeFirebaseFirestorePackage;
import io.invertase.firebase.storage.ReactNativeFirebaseStoragePackage;
import com.airbnb.android.react.lottie.LottiePackage;

public class PackageList {
  private Application application;
  private ReactNativeHost reactNativeHost;
  private MainPackageConfig mConfig;

  public PackageList(ReactNativeHost reactNativeHost) {
    this(reactNativeHost, null);
  }

  public PackageList(Application application) {
    this(application, null);
  }

  public PackageList(ReactNativeHost reactNativeHost, MainPackageConfig config) {
    this.reactNativeHost = reactNativeHost;
    mConfig = config;
  }

  public PackageList(Application application, MainPackageConfig config) {
    this.reactNativeHost = null;
    this.application = application;
    mConfig = config;
  }

  private ReactNativeHost getReactNativeHost() {
    return this.reactNativeHost;
  }

  private Resources getResources() {
    return this.getApplication().getResources();
  }

  private Application getApplication() {
    if (this.reactNativeHost == null) return this.application;
    return this.reactNativeHost.getApplication();
  }

  private Context getApplicationContext() {
    return this.getApplication().getApplicationContext();
  }

  public ArrayList<ReactPackage> getPackages() {
    return new ArrayList<>(Arrays.<ReactPackage>asList(
      new MainReactPackage(mConfig),
      new AsyncStoragePackage(),
      new RNDeviceInfoPackage(),
      new ReactNativeFirebaseAppPackage(),
      new ReactNativeFirebaseAuthPackage(),
      new ReactNativeFirebaseFirestorePackage(),
      new ReactNativeFirebaseStoragePackage(),
      new RNGestureHandlerPackage(),
      new LinearGradientPackage(),
      new RNReactNativeHapticFeedbackPackage(),
      new LottiePackage(),
      new ReanimatedPackage(),
      new SafeAreaContextPackage(),
      new RNScreensPackage(),
      new RNSharePackage(),
      new SvgPackage(),
      new RNFSPackage(),
      new VectorIconsPackage(),
      new RNCWebViewPackage()
    ));
  }
}
EOF
        
        echo "Building Debug APK..."
        ./gradlew assembleDebug --stacktrace
        
        echo "Building Release APK..."  
        ./gradlew assembleRelease --stacktrace
        
        echo "Building Debug AAB..."
        ./gradlew bundleDebug --stacktrace || true
        
        echo "Building Release AAB..."
        ./gradlew bundleRelease --stacktrace || true
        
    - uses: actions/upload-artifact@v4
      with:
        name: android-builds-complete
        path: |
          **/build/outputs/apk/debug/*.apk
          **/build/outputs/apk/release/*.apk
          **/build/outputs/bundle/debug/*.aab
          **/build/outputs/bundle/release/*.aab
