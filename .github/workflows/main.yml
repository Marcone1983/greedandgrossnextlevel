name: Build APK

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      
    - uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        rm -rf node_modules/detox || true
        npm uninstall detox --save-dev || true
        
    - uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Fix React Native version
      run: |
        sed -i 's/0\.79\.0/0.80.0/g' package.json
        sed -i 's/"@react-native\/babel-preset": "^0\.79\.0"/"@react-native\/babel-preset": "^0.80.0"/g' package.json
        sed -i 's/"@react-native\/gradle-plugin": "^0\.79\.0"/"@react-native\/gradle-plugin": "^0.80.0"/g' package.json
        sed -i 's/"@react-native\/metro-config": "^0\.79\.0"/"@react-native\/metro-config": "^0.80.0"/g' package.json
        npm install
        
    - name: Find Android directory
      run: |
        if [ -d "android" ]; then
          echo "ANDROID_DIR=android" >> $GITHUB_ENV
        elif [ -d "GreedGross" ]; then
          echo "ANDROID_DIR=GreedGross" >> $GITHUB_ENV
        else
          GRADLEW_PATH=$(find . -name "gradlew" -not -path "*/node_modules/*" | head -1)
          echo "ANDROID_DIR=$(dirname "$GRADLEW_PATH")" >> $GITHUB_ENV
        fi
        
    - name: Build all Android variants
      run: |
        cd "$ANDROID_DIR"
        chmod +x gradlew
        
        touch lasspath
        
        sed -i '/com\.facebook\.react:react-native-gradle-plugin/d' build.gradle
        sed -i '/classpath.*react-native-gradle-plugin/d' build.gradle
        
        if [ -f "settings.gradle" ]; then
          echo "includeBuild('../node_modules/@react-native/gradle-plugin')" >> settings.gradle
        fi
        
        if [ ! -d "app" ]; then
          echo "Creating app module structure..."
          mkdir -p app/src/main/java
          mkdir -p app/src/main/res
          
          echo 'apply plugin: "com.android.application"' > app/build.gradle
          echo '' >> app/build.gradle
          echo 'android {' >> app/build.gradle
          echo '    compileSdkVersion 34' >> app/build.gradle
          echo '    buildToolsVersion "34.0.0"' >> app/build.gradle
          echo '    defaultConfig {' >> app/build.gradle
          echo '        applicationId "com.greedgross"' >> app/build.gradle
          echo '        minSdkVersion 24' >> app/build.gradle
          echo '        targetSdkVersion 34' >> app/build.gradle
          echo '        versionCode 1' >> app/build.gradle
          echo '        versionName "1.0"' >> app/build.gradle
          echo '    }' >> app/build.gradle
          echo '    buildTypes {' >> app/build.gradle
          echo '        debug { debuggable true }' >> app/build.gradle
          echo '        release { minifyEnabled false }' >> app/build.gradle
          echo '    }' >> app/build.gradle
          echo '}' >> app/build.gradle
          
          echo "include ':app'" >> settings.gradle
        fi
        
        echo "Available build tasks:"
        java -cp gradle/wrapper/gradle-wrapper.jar org.gradle.wrapper.GradleWrapperMain tasks | grep -i assemble
        
        echo "Building Debug APK..."
        java -cp gradle/wrapper/gradle-wrapper.jar org.gradle.wrapper.GradleWrapperMain assembleDebug --stacktrace
        
        echo "Building Release APK..."  
        java -cp gradle/wrapper/gradle-wrapper.jar org.gradle.wrapper.GradleWrapperMain assembleRelease --stacktrace
        
        echo "Building Debug AAB..."
        java -cp gradle/wrapper/gradle-wrapper.jar org.gradle.wrapper.GradleWrapperMain bundleDebug --stacktrace || true
        
        echo "Building Release AAB..."
        java -cp gradle/wrapper/gradle-wrapper.jar org.gradle.wrapper.GradleWrapperMain bundleRelease --stacktrace || true
        
    - uses: actions/upload-artifact@v4
      with:
        name: android-builds-complete
        path: |
          **/build/outputs/apk/debug/*.apk
          **/build/outputs/apk/release/*.apk
          **/build/outputs/bundle/debug/*.aab
          **/build/outputs/bundle/release/*.aab
