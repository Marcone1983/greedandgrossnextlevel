name: simple build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      
      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: npm
          
      - run: npm install --legacy-peer-deps
      
      # Fix namespace issue for react-native-fs
      - name: Fix react-native-fs namespace
        run: |
          RNFS_BUILD_GRADLE="node_modules/react-native-fs/android/build.gradle"
          if [ -f "$RNFS_BUILD_GRADLE" ]; then
            sed -i '/android {/a\    namespace "com.rnfs"' "$RNFS_BUILD_GRADLE"
          fi
      
      # Create gradle.properties
      - name: Setup Gradle Properties
        run: |
          mkdir -p android
          cat > android/gradle.properties << EOF
          org.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=1024m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
          org.gradle.parallel=true
          org.gradle.configureondemand=true
          org.gradle.daemon=false
          android.useAndroidX=true
          android.enableJetifier=true
          EOF
      
      # Dai permessi di esecuzione a gradlew
      - run: chmod +x android/gradlew
      
      # Build Android con auto-fix
      - name: Build Android with Auto-Fix (5 attempts)
        run: |
          cd android
          
          for attempt in 1 2 3 4 5; do
            ./gradlew bundleRelease --stacktrace --no-daemon 2>&1 | tee build_log.txt || BUILD_FAILED=true
            
            if [ -z "$BUILD_FAILED" ]; then
              break
            fi
            
            # Fix corrupted JAR cache
            if grep -q "Failed to create Jar file" build_log.txt; then
              rm -rf ~/.gradle/caches/jars-*/
              rm -rf ~/.gradle/caches/modules-*/
              ./gradlew --stop
              
            # Fix missing namespaces
            elif grep -q "Namespace not specified" build_log.txt; then
              grep -B5 "Namespace not specified" build_log.txt | grep "project ':" | while read -r line; do
                MODULE=$(echo $line | sed "s/.*project ':\(.*\)'.*/\1/")
                MODULE_GRADLE="../node_modules/$MODULE/android/build.gradle"
                if [ -f "$MODULE_GRADLE" ]; then
                  if ! grep -q "namespace" "$MODULE_GRADLE"; then
                    NAMESPACE=$(echo $MODULE | sed 's/-/./g')
                    sed -i "/android {/a\\    namespace \"com.${NAMESPACE}\"" "$MODULE_GRADLE"
                  fi
                fi
              done
              
            # Fix gesture handler
            elif grep -q "react-native-gesture-handler" build_log.txt && grep -q "ExecutionException" build_log.txt; then
              RNGH_GRADLE="../node_modules/react-native-gesture-handler/android/build.gradle"
              if [ -f "$RNGH_GRADLE" ]; then
                grep -q "namespace" "$RNGH_GRADLE" || sed -i '/android {/a\    namespace "com.swmansion.gesturehandler"' "$RNGH_GRADLE"
              fi
              rm -rf ~/.gradle/caches/
              
            # Fix memory issues
            elif grep -q "OutOfMemoryError" build_log.txt || grep -q "Java heap space" build_log.txt; then
              CURRENT_MEM=$(grep "Xmx" gradle.properties | sed 's/.*-Xmx\([0-9]*\)m.*/\1/')
              NEW_MEM=$((CURRENT_MEM + 2048))
              sed -i "s/-Xmx${CURRENT_MEM}m/-Xmx${NEW_MEM}m/g" gradle.properties
              
            # Fix dependency issues
            elif grep -q "Could not resolve all files" build_log.txt || grep -q "Could not download" build_log.txt; then
              ./gradlew --stop
              rm -rf ~/.gradle/caches/
              REFRESH_DEPS="--refresh-dependencies"
              
            # Fix duplicate classes
            elif grep -q "Duplicate class" build_log.txt; then
              ./gradlew clean
              rm -rf build/ app/build/
              
            # Fix SDK version issues
            elif grep -q "minSdk" build_log.txt || grep -q "uses-sdk:minSdkVersion" build_log.txt; then
              find ../node_modules -name "build.gradle" -exec grep -l "minSdkVersion" {} \; | while read file; do
                sed -i 's/minSdkVersion [0-9]*/minSdkVersion 24/g' "$file"
              done
              
            # General fixes
            else
              ./gradlew clean
              rm -rf ~/.gradle/caches/transforms-*/
              ./gradlew --stop
            fi
            
            unset BUILD_FAILED
            sleep 3
          done
          
          if [ ! -f app/build/outputs/bundle/release/*.aab ] && [ ! -f app/build/outputs/apk/release/*.apk ]; then
            exit 1
          fi
      
      # Upload APK/AAB artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: android-build
          path: |
            android/app/build/outputs/bundle/release/*.aab
            android/app/build/outputs/apk/release/*.apk
            android/build_log.txt
          retention-days: 7
