name: simple build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      
      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: npm
          
      - run: npm install --legacy-peer-deps
      
      - name: Fix react-native-fs namespace
        run: |
          RNFS_BUILD_GRADLE="node_modules/react-native-fs/android/build.gradle"
          if [ -f "$RNFS_BUILD_GRADLE" ]; then
            sed -i '/android {/a\    namespace "com.rnfs"' "$RNFS_BUILD_GRADLE"
          fi
      
      - name: Setup Gradle Properties
        run: |
          mkdir -p android
          cat > android/gradle.properties << EOF
          org.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=1024m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
          org.gradle.parallel=true
          org.gradle.configureondemand=true
          org.gradle.daemon=false
          android.useAndroidX=true
          android.enableJetifier=true
          EOF
      
      - run: chmod +x android/gradlew
      
      - name: Build with 5 attempts
        run: |
          cd android
          
          for attempt in 1 2 3 4 5; do
            echo "::group::Build Attempt $attempt/5"
            
            # Prova il build
            ./gradlew bundleRelease --stacktrace --no-daemon && {
              echo "✅ Build succeeded on attempt $attempt"
              echo "::endgroup::"
              exit 0
            } || {
              echo "❌ Build failed on attempt $attempt"
              echo "::endgroup::"
            }
            
            # Se siamo all'ultimo tentativo, esci
            if [ $attempt -eq 5 ]; then
              exit 1
            fi
            
            # Fix automatici progressivamente più aggressivi
            echo "::group::Auto-fixing issues"
            
            if [ $attempt -eq 1 ]; then
              echo "Cleaning gradle caches..."
              rm -rf ~/.gradle/caches/jars-*/
              ./gradlew --stop
              
            elif [ $attempt -eq 2 ]; then
              echo "Deep cleaning all caches..."
              ./gradlew clean
              rm -rf ~/.gradle/caches/
              rm -rf ~/.gradle/wrapper/
              cd .. && npm audit fix --force || true
              cd android
              
            elif [ $attempt -eq 3 ]; then
              echo "Fixing all namespaces..."
              find ../node_modules -name "build.gradle" -path "*/android/*" | while read file; do
                if ! grep -q "namespace" "$file"; then
                  MODULE_NAME=$(echo "$file" | sed 's/.*node_modules\/\([^\/]*\).*/\1/')
                  NAMESPACE=$(echo "$MODULE_NAME" | sed 's/-/./g')
                  sed -i "/android {/a\\    namespace \"com.${NAMESPACE}\"" "$file" 2>/dev/null || true
                fi
              done
              
            elif [ $attempt -eq 4 ]; then
              echo "Nuclear option - reset everything..."
              cd ..
              rm -rf node_modules
              npm install --legacy-peer-deps
              npm audit fix --force || true
              cd android
              rm -rf build app/build ~/.gradle
            fi
            
            echo "::endgroup::"
            echo "Waiting before next attempt..."
            sleep 3
          done
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: android-build
          path: |
            android/app/build/outputs/bundle/release/*.aab
            android/app/build/outputs/apk/release/*.apk
          retention-days: 7
