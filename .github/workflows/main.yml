name: simple build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      
      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: npm
          
      - run: npm install --legacy-peer-deps
      
      # Fix namespace issue for react-native-fs
      - name: Fix react-native-fs namespace
        run: |
          echo "Fixing react-native-fs namespace issue..."
          RNFS_BUILD_GRADLE="node_modules/react-native-fs/android/build.gradle"
          if [ -f "$RNFS_BUILD_GRADLE" ]; then
            sed -i '/android {/a\    namespace "com.rnfs"' "$RNFS_BUILD_GRADLE"
          fi
      
      # Create gradle.properties
      - name: Setup Gradle Properties
        run: |
          mkdir -p android
          cat > android/gradle.properties << EOF
          org.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=1024m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
          org.gradle.parallel=true
          org.gradle.configureondemand=true
          org.gradle.daemon=false
          android.useAndroidX=true
          android.enableJetifier=true
          EOF
      
      # Dai permessi di esecuzione a gradlew
      - run: chmod +x android/gradlew
      
      # Build con rilevamento e fix automatici
      - name: Build Android with Auto-Fix
        run: |
          cd android
          
          for attempt in 1 2 3 4 5; do
            echo "üî® Build attempt $attempt/5..."
            
            # Cattura l'output del build
            if ./gradlew bundleRelease --stacktrace --no-daemon 2>&1 | tee build_output.log; then
              echo "‚úÖ Build succeeded!"
              break
            else
              echo "‚ùå Build failed, analyzing error..."
              
              # Analizza e risolvi errori comuni
              if grep -q "Failed to create Jar file" build_output.log; then
                echo "üîß Fixing: Corrupted JAR cache"
                rm -rf ~/.gradle/caches/jars-*/
                rm -rf ~/.gradle/caches/modules-*/
                ./gradlew --stop
              
              elif grep -q "Namespace not specified" build_output.log; then
                echo "üîß Fixing: Missing namespace"
                # Estrai il nome del modulo dal log
                MODULE=$(grep -oP "project ':\K[^']+(?=')" build_output.log | head -1)
                if [ ! -z "$MODULE" ]; then
                  MODULE_GRADLE="../node_modules/$MODULE/android/build.gradle"
                  if [ -f "$MODULE_GRADLE" ]; then
                    sed -i '/android {/a\    namespace "com.'${MODULE//-/.}'"' "$MODULE_GRADLE"
                  fi
                fi
              
              elif grep -q "OutOfMemoryError" build_output.log; then
                echo "üîß Fixing: Memory issues"
                sed -i 's/-Xmx4096m/-Xmx6144m/g' gradle.properties
                sed -i 's/MaxMetaspaceSize=1024m/MaxMetaspaceSize=2048m/g' gradle.properties
              
              elif grep -q "Could not resolve all files" build_output.log; then
                echo "üîß Fixing: Dependency resolution"
                rm -rf ~/.gradle/caches/
                ./gradlew --refresh-dependencies
              
              elif grep -q "SDK location not found" build_output.log; then
                echo "üîß Fixing: Missing SDK location"
                echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties
              
              elif grep -q "Duplicate class" build_output.log; then
                echo "üîß Fixing: Duplicate classes"
                ./gradlew clean
                rm -rf build/ app/build/
              
              else
                echo "‚ö†Ô∏è Unknown error, trying general fixes..."
                ./gradlew clean
                rm -rf ~/.gradle/caches/transforms-*/
                ./gradlew --stop
              fi
              
              # Aspetta un po' prima di riprovare
              echo "‚è≥ Waiting before retry..."
              sleep 5
            fi
          done
          
          # Se dopo 5 tentativi fallisce ancora
          if [ ! -f app/build/outputs/bundle/release/*.aab ]; then
            echo "‚ùå Build failed after 5 attempts"
            echo "üìã Last error log:"
            tail -n 50 build_output.log
            exit 1
          fi
      
      # Upload APK/AAB artifacts
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: android-build
          path: |
            android/app/build/outputs/bundle/release/*.aab
            android/app/build/outputs/apk/release/*.apk
            android/build_output.log
          retention-days: 7
