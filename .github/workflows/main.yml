name: simple build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      
      - uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: npm
          
      - run: npm install --legacy-peer-deps
      
      # Fix TUTTI i namespace PRIMA di iniziare
      - name: Fix ALL namespaces upfront
        run: |
          echo "Fixing all React Native module namespaces..."
          
          # Lista dei moduli comuni che hanno bisogno di namespace
          declare -A namespaces=(
            ["react-native-fs"]="com.rnfs"
            ["react-native-gesture-handler"]="com.swmansion.gesturehandler"
            ["react-native-linear-gradient"]="com.BV.LinearGradient"
            ["react-native-svg"]="com.horcrux.svg"
            ["react-native-screens"]="com.swmansion.rnscreens"
            ["react-native-safe-area-context"]="com.th3rdwave.safeareacontext"
            ["react-native-reanimated"]="com.swmansion.reanimated"
            ["react-native-vector-icons"]="com.oblador.vectoricons"
          )
          
          # Applica namespace conosciuti
          for module in "${!namespaces[@]}"; do
            GRADLE_FILE="node_modules/$module/android/build.gradle"
            if [ -f "$GRADLE_FILE" ]; then
              if ! grep -q "namespace" "$GRADLE_FILE"; then
                echo "Adding namespace to $module"
                sed -i "/android {/a\\    namespace \"${namespaces[$module]}\"" "$GRADLE_FILE"
              fi
            fi
          don
              find node_modules -name "build.gradle" -path "*/android/*" | while read file; do
              if ! grep -q "namespace" "$file"; then
              MODULE_NAME=$(echo "$file" | sed 's/.*node_modules\/\([^\/]*\).*/\1/')
              # Salta se già processato
              if [[ ! " ${!namespaces[@]} " =~ " ${MODULE_NAME} " ]]; then
                NAMESPACE=$(echo "$MODULE_NAME" | sed 's/@//g' | sed 's/\//./' | sed 's/-/./g')
                echo "Adding generic namespace to $MODULE_NAME as com.$NAMESPACE"
                sed -i "/android {/a\\    namespace \"com.${NAMESPACE}\"" "$file" 2>/dev/null || true
              fi
            fi
          done
      
      # Fix BuildConfig per TUTTI i moduli
      - name: Fix BuildConfig issues
        run: |
          echo "Enabling buildConfig for all modules..."
          find node_modules -name "build.gradle" -path "*/android/*" | while read file; do
        
            if grep -q "buildFeatures" "$file"; then
              # Se c'è già buildFeatures, aggiungi buildConfig se non presente
              if ! grep -q "buildConfig" "$file"; then
                sed -i '/buildFeatures {/a\        buildConfig true' "$file"
              fi
            else
              # Se non c'è buildFeatures, aggiungilo dopo android {
              sed -i '/android {/a\    buildFeatures {\n        buildConfig true\n    }' "$file"
            fi
          done
          
          # Fix anche per il progetto principale
          if [ -f "android/app/build.gradle" ]; then
            if ! grep -q "buildConfig" "android/app/build.gradle"; then
              sed -i '/android {/a\    buildFeatures {\n        buildConfig true\n    }' "android/app/build.gradle"
            fi
          fi
      
      - name: Setup Gradle Properties
        run: |
          mkdir -p android
          cat > android/gradle.properties << EOF
          org.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=1024m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
          org.gradle.parallel=false
          org.gradle.configureondemand=false
          org.gradle.daemon=false
          android.useAndroidX=true
          android.enableJetifier=true
          EOF
      
      - run: chmod +x android/gradlew
      
      - name: Clean Bouncy Castle cache
        run: |
          rm -rf ~/.gradle/caches/modules-2/files-2.1/org.bouncycastle/
          rm -rf ~/.gradle/caches/jars-9/
      
      - name: Build with 5 attempts
        run: |
          cd android
          
          for attempt in 1 2 3 4 5; do
            echo "::group::Build Attempt $Attempt 1/5"
            
            if ./gradlew bundleRelease --stacktrace --no-daemon; then
              echo "✅ Build succeeded on attempt $attempt"
              echo "::endgroup::"
              exit 0
            else
              echo "❌ Build failed on attempt $attempt"
              echo "::endgroup::"
            fi
            
            if [ $attempt -eq 5 ]; then
              exit 1
            fi
            
            echo "::group::Fixing errors for attempt $((attempt + 1))"
            
            if [ $attempt -eq 1 ]; then
              echo "Cleaning all caches..."
              rm -rf ~/.gradle/caches/
              ./gradlew --stop || true
              
            elif [ $attempt -eq 2 ]; then
              echo "Downgrading problematic dependencies..."
              echo "" >> build.gradle
              echo "allprojects {" >> build.gradle
              echo "    configurations.all {" >> build.gradle
              echo "        resolutionStrategy {" >> build.gradle
              echo "            force 'org.bouncycastle:bcprov-jdk18on:1.77'" >> build.gradle
              echo "        }" >> build.gradle
              echo "    }" >> build.gradle
              echo "}" >> build.gradle
              
            elif [ $attempt -eq 3 ]; then
              echo "Increasing memory and cleaning..."
              sed -i 's/-Xmx4096m/-Xmx6144m/g' gradle.properties
              ./gradlew clean
              rm -rf build/ app/build/
              
            elif [ $attempt -eq 4 ]; then
              echo "Nuclear reset..."
              cd ..
              rm -rf ~/.gradle
              rm -rf android/.gradle android/build android/app/build
              
              for module in react-native-fs react-native-gesture-handler react-native-linear-gradient; do
                GRADLE_FILE="node_modules/$module/android/build.gradle"
                if [ -f "$GRADLE_FILE" ]; then
                  case $module in
                    "react-native-fs") NS="com.rnfs" ;;
                    "react-native-gesture-handler") NS="com.swmansion.gesturehandler" ;;
                    "react-native-linear-gradient") NS="com.BV.LinearGradient" ;;
                  esac
                  sed -i "/android {/a\\    namespace \"$NS\"" "$GRADLE_FILE" 2>/dev/null || true
                  sed -i '/android {/a\    buildFeatures {\n        buildConfig true\n    }' "$GRADLE_FILE" 2>/dev/null || true
                fi
              done
              
              cd android
            fi
            
            echo "::endgroup::"
            sleep 3
          done
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: android-build
          path: |
            android/app/build/outputs/bundle/release/*.aab
            android/app/build/outputs/apk/release/*.apk
