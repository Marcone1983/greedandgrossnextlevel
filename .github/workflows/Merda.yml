name: Build APK

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node 18
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Setup JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Install dependencies
      run: |
        rm -rf node_modules
        rm -rf node_modules/detox || true
        npm uninstall detox --save-dev || true
        npm install
        
    - name: Setup Android
      run: |
        
        if [ -d "android" ]; then
          cd android
        elif [ -d "GreedGross" ]; then
        cd GreedGross
        else
          exit 1
        fi
      
        chmod +x gradlew
     
        touch lasspath
   
        sed -i '/repositories {/a\        maven { url file("$rootDir/../node_modules/react-native/android") }\
        maven { url file("$rootDir/../node_modules/jsc-android/dist") }' build.gradle
        
        cat > gradle.properties << 'EOF'

org.gradle.jvmargs=-Xmx6g -XX:MaxMetaspaceSize=1g -XX:+HeapDumpOnOutOfMemoryError 
} 
} 


org.gradle.workers.max=2
org.gradle.configureondemand=true
android.useAndroidX=true
android.enableJetifier=true
newArchEnabled=false
hermesEnabled=true
EOF
} 
        
        cat > build.gradle << 'EOF'
buildscript {
    ext {
        minSdk = 24
        compileSdk = 35
        targetSdk = 34
        ndkVersion = "26.1.10909125"
        kotlinVersion = "1.9.25"
    }
    dependencies {
        classpath("com.android.tools.build:gradle:8.5.0")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
            }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        maven { url "https://www.jitpack.io" }
        maven { url file("../node_modules/react-native/android") }
        maven { url file("../node_modules/jsc-android/dist") }
    }
    
    afterEvaluate { project ->
        if (project.hasProperty("android")) {
            android {
                if (!namespace) {
                    namespace project.group ?: "com.reactnative." + project.name.replace('-', '')
                }
                buildFeatures {
                    buildConfig true
                }
                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_17
                    targetCompatibility JavaVersion.VERSION_17
                }
                if (project.hasProperty("kotlin")) {
                    kotlinOptions {
                        jvmTarget = '17'
                    }
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
EOF

        echo "distributionUrl=https\\://services.gradle.org/distributions/gradle-8.14-all.zip" > gradle/wrapper/gradle-wrapper.properties
        
        if [ -d "app" ]; then
          
          sed -i 's/compileSdkVersion/compileSdk/' app/build.gradle
          sed -i 's/minSdkVersion/minSdk/' app/build.gradle
          sed -i 's/targetSdkVersion/targetSdk/' app/build.gradle
          
          if ! grep -q "namespace" app/build.gradle; then
            sed -i '/android {/a\    namespace "com.greedgross"' app/build.gradle
          fi
          
          sed -i 's/compileSdk [0-9]*/compileSdk 35' app/build.gradle
        fi
        
    - name: Build Debug APK
      run: |
        
        if [ -d "android" ]; then
         
          cd android
          
        elif [ -d "GreedGross" ]; then
          
          cd GreedGross
          
        fi
        
        ./gradlew assembleDebug --no-daemon --stacktrace
        
    - name: Build Release APK
      run: |
      
        if [ -d "android" ]; then
         
          cd Android  

        elif [ -d "GreedGross" ]; then
          
          cd GreedGross
        fi
        
        ./gradlew assembleRelease --no-daemon --stacktrace
        
    - name: Upload APKs
      uses: actions/upload-artifact@v4
      with:
      
        name: android-builds-rn079
        path: |
          
          **/build/outputs/apk/**/*.apk
          
          **/build/outputs/bundle/**/*.aab
