name: simple build

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      
      - uses: actions/setup-node@v4
        with:
          node-version: 24
          
      - run: npm install --legacy-peer-deps
      
      # Fix Firebase modules for Gradle 8.8
      - name: Fix Firebase modules
        run: |
          if [ -f "fix-firebase-modules.sh" ]; then
            chmod +x fix-firebase-modules.sh
            ./fix-firebase-modules.sh
          fi
      
      # Fix namespace issues
      - run: |
          chmod +x fix-namespaces.sh
          ./fix-namespaces.sh
      
      # Skip fix-gradle-configs.sh for now as it's causing syntax errors
      # - run: |
      #     chmod +x fix-gradle-configs.sh
      #     ./fix-gradle-configs.sh
      
      # Fix missing default configurations
      - name: Fix missing configurations
        run: |
          echo "Fixing missing default configurations..."
          MODULES=(
            "@react-native-firebase/auth"
            "@react-native-firebase/app"
            "@react-native-firebase/firestore"
            "@react-native-firebase/storage"
          )
          
          for module in "${MODULES[@]}"; do
            MODULE_PATH=$(echo "$module" | sed 's/@//')
            BUILD_FILE="node_modules/$MODULE_PATH/android/build.gradle"
            if [ -f "$BUILD_FILE" ]; then
              if ! grep -q "configurations {" "$BUILD_FILE"; then
                echo "" >> "$BUILD_FILE"
                echo "configurations { default }" >> "$BUILD_FILE"
              fi
            fi
          done
      
      - name: Setup Gradle Properties
        run: |
          mkdir -p android
          cat > android/gradle.properties << EOF
          org.gradle.jvmargs=-Xmx4096m -XX:MaxMetaspaceSize=1024m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
          org.gradle.parallel=false
          org.gradle.configureondemand=false
          org.gradle.daemon=false
          android.useAndroidX=true
          android.enableJetifier=true
          EOF
      
      - run: chmod +x android/gradlew
      
      - name: Clean Bouncy Castle cache
        run: |
          rm -rf ~/.gradle/caches/modules-2/files-2.1/org.bouncycastle/
          rm -rf ~/.gradle/caches/jars-9/
      
      - name: Build with 5 attempts
        run: |
          cd android
          
          for attempt in 1 2 3 4 5; do
            echo "::group::Build Attempt $attempt/5"
            
            if ./gradlew bundleRelease --stacktrace --no-daemon; then
              echo "✅ Build succeeded on attempt $attempt"
              echo "::endgroup::"
              exit 0
            else
              echo "❌ Build failed on attempt $attempt"
              echo "::endgroup::"
            fi
            
            if [ $attempt -eq 5 ]; then
              exit 1
            fi
            
            echo "::group::Fixing errors for attempt $((attempt + 1))"
            
            if [ $attempt -eq 1 ]; then
              echo "Cleaning all caches..."
              rm -rf ~/.gradle/caches/
              ./gradlew --stop || true
              
            elif [ $attempt -eq 2 ]; then
              echo "Downgrading problematic dependencies..."
              echo "" >> build.gradle
              echo "allprojects {" >> build.gradle
              echo "    configurations.all {" >> build.gradle
              echo "        resolutionStrategy {" >> build.gradle
              echo "            force 'org.bouncycastle:bcprov-jdk18on:1.77'" >> build.gradle
              echo "        }" >> build.gradle
              echo "    }" >> build.gradle
              echo "}" >> build.gradle
              
            elif [ $attempt -eq 3 ]; then
              echo "Increasing memory and cleaning..."
              sed -i 's/-Xmx4096m/-Xmx6144m/g' gradle.properties
              ./gradlew clean
              rm -rf build/ app/build/
              
              # Fix specifico per i moduli problematici
              echo "Fixing specific module configurations..."
              cd ..
              
              # react-native-device-info removed as it's not in package.json
              
              # Re-run Firebase fixes
              if [ -f "../fix-firebase-modules.sh" ]; then
                cd ..
                chmod +x fix-firebase-modules.sh
                ./fix-firebase-modules.sh
                cd android
              fi
              
              cd android
              
            elif [ $attempt -eq 4 ]; then
              echo "Nuclear reset..."
              cd ..
              rm -rf ~/.gradle
              rm -rf android/.gradle android/build android/app/build
              
              # Re-fix namespaces critici
              sed -i '/android {/a\    namespace "com.rnfs"' node_modules/react-native-fs/android/build.gradle 2>/dev/null || true
              sed -i '/android {/a\    namespace "com.swmansion.gesturehandler"' node_modules/react-native-gesture-handler/android/build.gradle 2>/dev/null || true
              sed -i '/android {/a\    namespace "com.BV.LinearGradient"' node_modules/react-native-linear-gradient/android/build.gradle 2>/dev/null || true
              # react-native-device-info removed - not in package.json
              sed -i '/android {/a\    namespace "io.invertase.firebase.auth"' node_modules/@react-native-firebase/auth/android/build.gradle 2>/dev/null || true
              
              cd android
            fi
            
            echo "::endgroup::"
            sleep 3
          done
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: android-build
          path: |
            android/app/build/outputs/bundle/release/*.aab
            android/app/build/outputs/apk/release/*.apk
